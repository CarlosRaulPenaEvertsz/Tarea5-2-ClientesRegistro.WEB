@model ClientesRegistro.MODELS.Models.Cliente

@{
/**/

/**/

//ViewBag.Title = "Create";
}


<h2>Crear Cliente</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        @*<h4>Cliente</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre_Comercial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre_Comercial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre_Comercial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombres, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Apellidos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Apellidos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Sexo, new SelectList(
                  new List<Object>{
                       new { value = "M" , text = "Masculino"  },
                       new { value = "F" , text = "Femenino" }
                       },"value","text",2 ), new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fecha_Nacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @*@Html.EditorFor(model => model.Fecha_Nacimiento, new { htmlAttributes = new { @class = "form-control", id = "FechaPicker" } })
                    @Html.TextBoxFor(model => model.Fecha_Nacimiento, new { htmlAttributes = new { @class = "form-control", id = "FechaPicker" } })*@
                <input id="fecha" name="fecha" type="date" onload="getDate()" class="form-control" value="fecha" required/>
                @*@Html.TextBoxFor(model => model.Username, new { @class = "form-control", id = "loginUsername", placeholder = "Username", @required = "required", autofocus = "" })*@
                @*@Html.ValidationMessageFor(model => model.Fecha_Nacimiento, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cedula_RNC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cedula_RNC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cedula_RNC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoNCF, "TipoNCF", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoNCF", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoNCF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Registrar Datos" class="btn btn-success" id="boton" />
            </div>
        </div>
    </div>
}



    <div>

        @*@Html.ActionLink("Retornar", "Index", "Home", null, new { @class = "btn btn-success" })*@
        @Html.ActionLink("Volver al Listado", "Index", "Clientes", new { controller = "Clientes" }, new { @class = "btn btn-success" })
    </div>

<script>
    //$('carlos').bind('submit', function (event) {
    //    alert("Ñe");
    //    return false;
    //    });

    //var buttonClicked = "";
    //$('carlos').submit(function (e) {
    //    e.preventDefault();
    //    alert(buttonClicked);
    //    buttonClicked = "";
    //});
    //$("carlos input[type = 'submit']").click(function (e) {
    //    buttonClicked = $(this).attr("id");
    //});


</script>

@section Scripts {

    <script>
        $(document).ready(function () {
            $("#input_search").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#table_body tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $("#FechaPicker").datepicker({
                format: "dd/mm/yyyy",
                language: "es",
                todayHighlight: true,
                autoclose: true
            }).datepicker("setDate", new Date());
        };
    </script>





    @Scripts.Render("~/bundles/jqueryval")
}
